<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<aura:documentation>
    <aura:meta name="owner" value="Aura Framework" />
    <aura:meta name="formFactors" value="all" />
    <aura:meta name="isSubComponent" value="false" />
    <aura:meta name="sldsLink" value="" />
    <aura:meta name="category" value="" />
    <aura:meta name="classification" value="" />

    <aura:description>
        <p>The markup looks similar to HTML and can contain components as well as a set of supported HTML tags. 
        The .app resource is a standalone entry point for the app and enables you to define the overall application layout, style sheets, and global JavaScript includes. 
        It starts with the top-level <code>&lt;aura:application></code> tag, which contains optional system attributes. These system attributes tell the framework how to configure the app.</p>
        <table>
            <tr>
                <th>System Attribute</th>
                <th>Type</th>
                <th>Description</th>
            </tr>
            <tr>
                <td>access</td>
                <td>string</td>
                <td>Indicates whether the app can be extended by another app outside of a namespace. Possible values are <code>public</code> and <code>global</code>. The default value is <code>public</code>.</td>
            </tr>
            <tr>
                <td>controller</td>
                <td>string</td>
                <td>The server-side controller class for the app. The format is <code>namespace.myController</code>.</td> 
            </tr>
            <tr>
                <td>description</td>
                <td>string</td>
                <td>A brief description of the app.</td> 
            </tr>
            <tr>
                <td>extends</td>
                <td>component</td>
                <td>The app to be extended, if applicable. For example, <code>extends="namespace:yourApp"</code>.</td> 
            </tr>
            <tr>
                <td>extensible</td>
                <td>boolean</td>
                <td>Indicates whether the app is extensible by another app. The default value is <code>false</code>.</td>
            </tr>
            <tr>
                <td>implements</td>
                <td>string</td>
                <td>A comma-separated list of interfaces that the app implements.</td>
            </tr>
            <tr>
                <td>template</td>
                <td>component</td>
                <td>The name of the template used to bootstrap the loading of the framework and the app. The default value is <code>aura:template</code>. You can customize the template by creating your own component that extends the default template. For example: <code>&lt;aura:component extends="aura:template" ... >&lt;/aura:component></code></td>
            </tr>
            <tr>
                <td>tokens</td>
                <td>string</td>
                <td>A comma-separated list of tokens bundles for the application. For example, <code>tokens="ns:myAppTokens"</code>. Tokens make it easy to ensure that your design is consistent, and even easier to update it as your design evolves. Define the token values once and reuse them throughout your application.</td>
            </tr>
            <tr>
                <td>useAppcache</td>
                <td>boolean</td>
                <td>Deprecated. Browser vendors have deprecated AppCache, so we followed their lead. Remove the <code>useAppcache</code> attribute in the <code>&lt;aura:application></code> tag of your standalone apps to avoid cross-browser support issues due to deprecation by browser vendors.</td>  
            </tr>
        </table>

    </aura:description>
</aura:documentation>