<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:documentation>

  <aura:meta name="owner" value="IO Components" />
  <aura:meta name="formFactors" value="all" />

  <aura:description>
    <p>This event is fired when a validation error occurs on an input field. To set a handler for the <code>ui:validationError</code> event, use the <code>onError</code> attribute on a component that extends <code>ui:input</code>, 
    such as <code>ui:inputText</code> and <code>ui:inputNumber</code>.</p>

    <p>The following <code>ui:inputNumber</code> component displays an error message when the number entered is less than 10. It displays an alert when the error message is cleared.</p>
    <pre>&lt;aura:component>
    &lt;aura:attribute name="myNumber" type="integer" default="10"/>
    &lt;ui:inputNumber aura:id="number" label="Enter a number: " value="{!v.myNumber}" onError="{!c.handleError}"/>
    &lt;ui:button label="Validate" press="{!c.handleValidate}"/>
&lt;/aura:component></pre>

    <p>Here's the client-side controller that handles the input validation and handling of the validation error.</p>
    <pre>({
    handleValidate : function (cmp, evt, helper){
        var num = cmp.find("number");
        var val = num.get("v.value");
        if (val&lt;10) {
            num.set("v.errors", [{message:"Enter a number more than 10"}]);
        } else {
            num.set("v.errors", null);
        }
    },
    
    handleError : function (cmp, evt, helper){
        alert("An error was found in your input.");
    }
})</pre>
    <p>If you're using this event with a component other than those that extend <code>ui:input</code>, register the event first.</p>
    <pre>&lt;aura:registerEvent name="onError"  type="ui:validationError"
                    description="The event fired when validation errors occur." /></pre>
    <p>For more information, see the <a href="https://developer.salesforce.com/docs/atlas.en-us.lightning.meta/lightning/js_validate_fields.htm" target="_blank">Lightning Components Developer Guide</a>.</p>
  </aura:description>
</aura:documentation>
