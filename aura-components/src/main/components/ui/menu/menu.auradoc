<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:documentation>
	<aura:description>
		<p>
			A <code>ui:menu</code> component contains a trigger and list items. 
            To apply Lightning Design System styling, we recommend that you use <code>lightning:buttonMenu</code> instead of <code>ui:menu</code>.
        </p>
        <p>
            You can wire up list items to actions in a client-side controller so that selection of the item triggers an action.
			This example shows a menu with list items, which when pressed updates the label on the trigger.
		</p>
<pre>&lt;ui:menu>
    &lt;ui:menuTriggerLink aura:id="trigger" label="Opportunity Status"/>
        &lt;ui:menuList class="actionMenu" aura:id="actionMenu">
              &lt;ui:actionMenuItem aura:id="item1" label="Any" click="{!c.updateTriggerLabel}"/>
              &lt;ui:actionMenuItem aura:id="item2" label="Open" click="{!c.updateTriggerLabel}" disabled="true"/>
              &lt;ui:actionMenuItem aura:id="item3" label="Closed" click="{!c.updateTriggerLabel}"/>
              &lt;ui:actionMenuItem aura:id="item4" label="Closed Won" click="{!c.updateTriggerLabel}"/>
          &lt;/ui:menuList>
&lt;/ui:menu></pre><p>This client-side controller updates the trigger label when a menu item is clicked.</p>

<pre>({
    updateTriggerLabel: function(cmp, event) {
        var triggerCmp = cmp.find("trigger");
        if (triggerCmp) {
            var source = event.getSource();
            var label = source.get("v.label");
            triggerCmp.set("v.label", label);
        }
    }
})</pre>
		<p>
		    The dropdown menu and its menu items are hidden by default. You can change this by setting the <code>visible</code> attribute on the <code>ui:menuList</code> component to <code>true</code>.
		     The menu items are shown only when you click the <code>ui:menuTriggerLink</code> component.
	    </p>
		<p>
			To use a trigger, which opens the menu, nest the <code>ui:menuTriggerLink</code> component in <code>ui:menu</code>. For list items, use the <code>ui:menuList</code> component, and include any of these
			list item components that can trigger a client-side controller action:
			<ul>
			    <li><code>ui:actionMenuItem</code> - A menu item</li>
			    <li><code>ui:checkboxMenuItem</code> - A checkbox that supports multiple selections</li>
			    <li><code>ui:radioMenuItem</code> - A radio item that supports single selection</li>
			</ul>
			To include a separator for these menu items, use <code>ui:menuItemSeparator</code>.
		</p>
	</aura:description>
	<aura:example name="menu" ref="auradocs:demoMenu" label="Using ui:menu">
    	<p>This example shows several ways to create a menu.
           To apply Lightning Design System styling, we recommend that you use <code>lightning:buttonMenu</code> instead of <code>ui:menu</code>.</p>
	</aura:example>
</aura:documentation>
