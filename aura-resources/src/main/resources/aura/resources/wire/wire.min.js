(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):b(a.WireService={})})(this,function(a){"use strict";function b(a,b){a.forEach(a=>{const{listener:c,statics:d,params:e}=a,f=Object.create(null);if(e){const a=Object.keys(e);for(let c=0,d=a.length;c<d;c++){const d=a[c],g=b[e[d]];f[d]=g}}const g=Object.assign({},d,f);c.call(void 0,g)})}function c(a,b,c){c.mutated||(c.mutated=new Set,Promise.resolve().then(d.bind(void 0,a,c))),c.mutated.add(b)}function d(a,c){const d=new Set,e=c.mutated;delete c.mutated,e.forEach(b=>{const e=a[b];if(c.values[b]!==e){c.values[b]=e;const a=c.listeners[b];for(let b=0,c=a.length;b<c;b++)d.add(a[b])}}),b(d,c.values)}function e(a,b,d){const e=c.bind(void 0,a,b,d),f=g(a,b,e);Object.defineProperty(a,b,f)}function f(a,b,c){if(c=c||[],!a||-1<c.indexOf(a))return null;const d=Object.getOwnPropertyDescriptor(a,b);if(d)return d;const e=Object.getPrototypeOf(a);return e?(c.push(a),f(e,b,c)):null}function g(a,b,c){const d=f(a,b);let e,g,h;if(null===d||d.get===void 0&&d.set===void 0){let d=a[b];e=!0,g=function(){return d},h=function(a){d=a,c()}}else{const{set:b,get:f}=d;e=d.enumerable,h=function(d){b&&b.call(a,d),c()},g=function(){return f?f.call(a):void 0}}return{set:h,get:g,enumerable:e,configurable:!0}}function h(a,b){const c=a.indexOf(b);-1<c&&a.splice(c,1)}function i(a,b){for(let c=0,d=a.length;c<d;c++)if(a[c].listener===b)return void a.splice(c,1)}function j(a){for(let b=0,c=a.length;b<c;++b)a[b].call(void 0)}var k={invariant(a,b){if(!a)throw new Error(`Invariant Violation: ${b}`)},isTrue(a,b){if(!a)throw new Error(`Assert Violation: ${b}`)},isFalse(a,b){if(a)throw new Error(`Assert Violation: ${b}`)}};const l="updated",m="connected",n="disconnected",o="connect",p="disconnect",q="config";class r{constructor(a,b,c,d,e){this._cmp=a,this._def=b,this._context=c,this._wireDef=d,this._wireTarget=e}addEventListener(a,b){switch(a){case o:const c=this._context["@wire"][m];k.isFalse(c.includes(b),"must not call addEventListener(\"connect\") with the same listener"),c.push(b);break;case p:const d=this._context["@wire"][n];k.isFalse(d.includes(b),"must not call addEventListener(\"disconnect\") with the same listener"),d.push(b);break;case q:const f=this._wireDef.params,g=this._wireDef.static,h=Object.keys(f);if(0===h.length){return void b.call(void 0,g||{})}const i={listener:b,statics:g,params:f},j=this._context["@wire"][l];h.forEach(a=>{const b=f[a];let c=j.listeners[b];c?c.push(i):(c=[i],j.listeners[b]=c,e(this._cmp,b,j))});break;default:throw new Error(`unsupported event type ${a}`);}}removeEventListener(a,b){switch(a){case o:const c=this._context["@wire"][m];h(c,b);break;case p:const d=this._context["@wire"][n];h(d,b);break;case q:const e=this._context["@wire"][l].listeners,{params:f}=this._wireDef;f&&Object.keys(f).forEach(a=>{const c=f[a],d=e[c];d&&i(d,b)});break;default:throw new Error(`unsupported event type ${a}`);}}dispatchEvent(a){if(a instanceof s){const b=a.value;return this._wireDef.method?this._cmp[this._wireTarget](b):this._cmp[this._wireTarget]=b,!1}if("WireContextEvent"===a.type)return this._cmp.dispatchEvent(a);throw new Error(`Invalid event ${a}.`)}}class s{constructor(a){this.type="ValueChangedEvent",this.value=a}}const t=new Map,u={wiring:(a,b,c,d)=>{const e=d["@wire"]=Object.create(null);e[m]=[],e[n]=[],e[l]={listeners:{},values:{}};const f=c.wire,g=Object.keys(f);for(let e=0,h=g.length;e<h;e++){const b=g[e],h=f[b],i=t.get(h.adapter);if(i){const e=new r(a,c,d,h,b);i({dispatchEvent:e.dispatchEvent.bind(e),addEventListener:e.addEventListener.bind(e),removeEventListener:e.removeEventListener.bind(e)})}}},connected:(a,b,c,d)=>{let e;c.wire&&(e=d["@wire"][m])&&j(e)},disconnected:(a,b,c,d)=>{let e;c.wire&&(e=d["@wire"][n])&&j(e)}};a.registerWireService=function(a){a(u)},a.register=function(a,b){k.isTrue(a,"adapter id must be truthy"),k.isTrue("function"==typeof b,"adapter factory must be a callable"),t.set(a,b)},a.ValueChangedEvent=s,Object.defineProperty(a,"__esModule",{value:!0})});
